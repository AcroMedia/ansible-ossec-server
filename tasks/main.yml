---
# tasks file for ossec-server

- name: Install the correct repository
  include: "RedHat.yml"
  when: ansible_os_family == "RedHat"

- name: Install the correct repository
  include: "Debian.yml"
  when: ansible_os_family == "Debian"

- name: Installing SSL files.
  copy: src={{ item }}
        dest=/var/ossec/etc/{{ item }}
        owner=root
        group=root
        mode=0660
  with_items:
    - sslmanager.key
    - sslmanager.cert
  tags:
    - config

- name: Configure the shared-agent.conf
  template: src=var-ossec-etc-shared-agent.conf.j2
            dest=/var/ossec/etc/shared/agent.conf
            owner=ossec
            group=ossec
            mode=0644
  notify: restart ossec-server
  tags:
    - init
    - config

- name: Installing the local_rules.xml
  template: src=var-ossec-rules-local_rules.xml.j2
            dest=/var/ossec/rules/local_rules.xml
            owner=root
            group=root
            mode=0644
  notify: restart ossec-server
  tags:
    - init
    - config
    - rules

- name: Install RHEL6 CIS Root Checks
  get_url:
    url: https://raw.githubusercontent.com/ossec/ossec-hids/master/src/rootcheck/db/cis_rhel6_linux_rcl.txt
    dest: /var/ossec/etc/shared/cis_rhel6_linux_rcl.txt
    mode: 0660
    owner: root
    group: ossec 

- name: Set Distribution CIS filename for Debian/Ubuntu
  set_fact:
    cis_distribution_filename: cis_debian_linux_rcl.txt
  when: ansible_os_family == "Debian"

- name: Set Distribution CIS filename for RHEL5
  set_fact:
    cis_distribution_filename: cis_rhel5_linux_rcl.txt
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "5"

- name: Set Distribution CIS filename for RHEL6
  set_fact:
    cis_distribution_filename: cis_rhel6_linux_rcl.txt
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

- name: Set ossec deploy facts for RedHat
  set_fact:
    ossec_server_config_filename: ossec-server.conf
    ossec_init_name: ossec-hids
  when: ansible_os_family == "RedHat"

- name: Check if client-syslog is enabled
  shell: "/var/ossec/bin/ossec-control status | grep -c 'ossec-csyslogd is running' | xargs echo"
  register: csyslog_running
  changed_when: False

- name: Check csyslog_running output
  debug: msg="csyslog running? '{{ csyslog_running.stdout }}'"

- name: Enable client-syslog if not running and ossec_server_config.syslog_outputs is given
  command: /var/ossec/bin/ossec-control enable client-syslog
  when: csyslog_running.stdout == '0' and ossec_server_config.syslog_outputs is defined

- name: Start client-syslog if not running and ossec_server_config.syslog_outputs is given
  command: /var/ossec/bin/ossec-control start client-syslog
  when: csyslog_running.stdout == '0' and ossec_server_config.syslog_outputs is defined

- name: Set ossec deploy facts for Debian
  set_fact:
    ossec_server_config_filename: ossec.conf
    ossec_init_name: ossec
  when: ansible_os_family == "Debian"

- name: Enable ossec client-syslog if syslog_output is enabled in configuration
  command: /var/ossec/bin/ossec-control enable client-syslog
  notify: restart ossec-server
  when: ossec_server_config.syslog_outputs is defined

- name: Configure the ossec-server
  template: src=var-ossec-etc-ossec-server.conf.j2
            dest=/var/ossec/etc/{{ ossec_server_config_filename }}
            owner=root
            group=root
            mode=0644
  notify: restart ossec-server
  tags:
    - init
    - config
